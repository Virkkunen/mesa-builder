name: Build mesa-git

on:
  workflow_dispatch:

jobs:
  buildAndRelease:
    name: Build on Arch Linux and create release
    runs-on: ubuntu-latest

    container:
      image: archlinux:latest
      options: --security-opt seccomp=unconfined

    steps:
      - name: Init pacman and install dependencies
        run: |
          echo "--> Enabling the [multilib] repo, syncing and updating..."
          sed -i "s/^#\[multilib\]/[multilib]/" /etc/pacman.conf
          sed -i "/\[multilib\]/{n;s/^#Include/Include/}" /etc/pacman.conf
          pacman -Syyu --noconfirm

          echo "--> Installing dependencies..."
          pacman -S --noconfirm base-devel git sudo lib32-gcc-libs lib32-zlib lib32-libffi lib32-zstd lib32-libxml2

      - name: Create non-root build user
        run: |
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          chown -R builder:builder .

      - name: Build llvm-minimal-git
        run: |
          sudo -u builder bash << 'EOF'
          set -e
          echo "--> Cloning and building llvm-minimal-git..."
          git clone "https://aur.archlinux.org/llvm-minimal-git.git"
          cd llvm-minimal-git
          makepkg -sfc --noconfirm
          EOF

          echo "--> Installing llvm-minimal-git..."
          sudo pacman -U --noconfirm llvm-minimal-git/*.pkg.tar.zst

      - name: Build lib32-llvm-minimal-git
        run: |
          sudo -u builder bash << 'EOF'
          set -e
          echo "--> Cloning and building lib32-llvm-minimal-git..."
          git clone "https://aur.archlinux.org/lib32-llvm-minimal-git.git"
          cd lib32-llvm-minimal-git
          makepkg -sfc --noconfirm
          EOF

          echo "--> Installing lib32-llvm-minimal-git..."
          sudo pacman -U --noconfirm lib32-llvm-minimal-git/*.pkg.tar.zst

      - name: Build mesa-git
        run: |
          sudo -u builder bash << 'EOF'
          set -e
          echo "--> Cloning and building mesa-git..."
          git clone "https://aur.archlinux.org/mesa-git.git"
          cd mesa-git

          sed -i "s/gallium-drivers=r300,r600,radeonsi,nouveau,virgl,svga,softpipe,llvmpipe,i915,iris,crocus,zink/gallium-drivers=radeonsi,virgl,svga,softpipe,llvmpipe,zink/" PKGBUILD
          sed -i "s/vulkan-drivers=amd,intel,intel_hasvk,swrast,virtio,nouveau/vulkan-drivers=amd,swrast,virtio/" PKGBUILD
          
          export MESA_WHICH_LLVM=1

          makepkg -sfc --noconfirm
          EOF

      - name: Build lib32-mesa-git
        run: |
          sudo -u builder bash << 'EOF'
          set -e
          echo "--> Cloning and building lib32-mesa-git..."
          git clone "https://aur.archlinux.org/lib32-mesa-git.git"
          cd lib32-mesa-git

          sed -i "s/gallium-drivers=r300,r600,radeonsi,nouveau,svga,softpipe,llvmpipe,virgl,iris,zink,crocus/gallium-drivers=radeonsi,svga,softpipe,llvmpipe,virgl,zink/" PKGBUILD
          sed -i "s/vulkan-drivers=amd,intel,swrast,virtio,intel_hasvk/vulkan-drivers=amd,swrast,virtio/" PKGBUILD

          export MESA_WHICH_LLVM=1

          makepkg -sfc --noconfirm
          EOF

      - name: Prepare artifacts
        id: prep_artifacts
        run: |
          echo "--> Preparing artifacts for release..."
          mkdir -p artifacts
          find . -name "*.pkg.tar.zst" -print0 | xargs -0 -I {} mv {} artifacts/
          echo "tag_name=build-${date + '%Y.%m.%d-%H%M%S'}" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2.3.2
        with:
          files: artifacts/*.pkg.tar.zst
          tag_name: ${{ steps.prep_articats.outputs.tag_name }}
          name: Mesa & LLVM Build ${{ steps.prep_articats.outputs.tag_name }}
          body: |
            Automated build of mesa-git, lib32-mesa-git, llvm-minimal-git, and lib32-llvm-minimal-git.
            
            **Triggered by:** `${{ github.actor }}`
            **Workflow Run:** `${{ github.run_id }}`
          prerelease: true
